{"version":3,"sources":["pipeline-express.jpg","App.js","index.js"],"names":["myAlgoWallet","Pipeline","init","App","Component","constructor","props","super","inputRecipient","event","this","setState","recipient","target","value","inputAmount","amount","inputNote","note","handleCheckChange","main","state","myAddress","txID","render","align","class","alt","src","logo","width","className","name","type","checked","onChange","wallet","context","returnTo","index","ReactDOM","document","getElementById"],"mappings":"yMAAe,MAA0B,6C,OCKzC,MAAMA,EAAeC,IAASC,OAC9B,MAAMC,UAAYC,YAEhBC,YAAYC,GACVC,MAAMD,GADW,KAYnBE,eAAkBC,IAChBC,KAAKC,SAAS,CAAEC,UAAWH,EAAMI,OAAOC,SAbvB,KAgBnBC,YAAeN,IACbC,KAAKC,SAAS,CAACK,OAAQP,EAAMI,OAAOC,SAjBnB,KAoBnBG,UAAaR,IACXC,KAAKC,SAAS,CAACO,KAAMT,EAAMI,OAAOC,SArBjB,KAwBnBK,kBAAoB,KACpBT,KAAKC,SAAS,CAACS,MAAQV,KAAKW,MAAMD,OAAO,IAAMnB,IAASmB,KAAOV,KAAKW,MAAMD,QAvBxEV,KAAKW,MAAQ,CACXD,MAAM,EACNE,UAAW,GACXV,UAAW,GACXI,OAAQ,EACRE,KAAM,GACNK,KAAM,IAsBVC,SACE,OAAO,sBAAKC,MAAM,SAASC,MAAM,OAA1B,UACP,qBAAKC,IAAI,mBAAmBC,IAAKC,EAAMC,MAAM,QAAY,uBACzD,sBAAKJ,MAAM,gBAAX,UACA,0CAGF,uBACIK,UAAU,mBACVC,KAAK,UACLC,KAAK,WACLC,QAASxB,KAAKW,MAAMD,KACpBe,SAAUzB,KAAKS,uBAEf,cAAC,IAAD,CAAYiB,OAAQpC,EAAcqC,QAAS3B,KAAM4B,SAAU,cAC3D,6BAAK,eAAiB5B,KAAKW,MAAMC,YACjC,iCACE,wBAAOI,MAAO,aAAd,uBAEE,uBAAOO,KAAK,OAAOP,MAAM,eAAeS,SAAUzB,KAAKF,oBACjD,uBACR,wBAAOkB,MAAM,aAAb,oBAEE,uBAAOO,KAAK,SAASP,MAAM,eAAeS,SAAUzB,KAAKK,iBAE3D,wBAAOW,MAAM,aAAb,UAA0B,uBAA1B,QAEE,uBAAOO,KAAK,OAAOP,MAAM,eAAeS,SAAUzB,KAAKO,kBAG3D,cAAC,IAAD,CACAsB,MAAO,EACP3B,UAAWF,KAAKW,MAAMT,UACtBI,OAAQN,KAAKW,MAAML,OACnBE,KAAMR,KAAKW,MAAMH,KACjBI,UAAWZ,KAAKW,MAAMC,UACtBc,OAAQpC,EACRqC,QAAS3B,KACT4B,SAAU,SAEV,6BAAK,mBAAqB5B,KAAKW,MAAME,WAK5BpB,QC7EfqC,IAAShB,OAAO,cAAC,EAAD,IAASiB,SAASC,eAAe,U","file":"static/js/main.bc6e17f1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pipeline-express.1dec43b1.jpg\";","import React, {Component} from 'react'\nimport { AlgoButton, AlgoSendButton, Pipeline} from 'pipeline-express-react'\nimport './index.css'\nimport logo from './pipeline-express.jpg'\n\nconst myAlgoWallet = Pipeline.init();\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      main: true,\n      myAddress: \"\",\n      recipient: \"\",\n      amount: 0,\n      note: \"\",\n      txID: \"\"\n    }\n  }\n\n  inputRecipient = (event) => {\n    this.setState({ recipient: event.target.value });\n  }\n\n  inputAmount = (event) => {\n    this.setState({amount: event.target.value});\n  }\n\n  inputNote = (event) => {\n    this.setState({note: event.target.value});\n  }\n\n  handleCheckChange = () => {\n  this.setState({main: ! this.state.main}, () => Pipeline.main = this.state.main)\n\n  }\n\n\n  render() {\n    return <div align=\"center\" class=\"card\">    \n    <img alt=\"Pipeline Express\" src={logo} width=\"300\"></img><br></br>\n    <div class=\"toggle-select\">\n    <h5>\n    MainNet:\n  </h5>\n  <input\n      className=\"form-check-input\"\n      name=\"mainnet\" \n      type=\"checkbox\"\n      checked={this.state.main}\n      onChange={this.handleCheckChange} />\n  </div>            \n      <AlgoButton wallet={myAlgoWallet} context={this} returnTo={\"myAddress\"} />\n      <h3>{\"My Address: \" + this.state.myAddress}</h3>\n      <form >\n        <label class= \"form-label\">\n          Recipient:\n          <input type=\"text\" class=\"form-control\" onChange={this.inputRecipient} />\n        </label><br></br>\n        <label class=\"form-label\">\n          Amount:\n          <input type=\"number\" class=\"form-control\" onChange={this.inputAmount} />\n        </label>\n        <label class=\"form-label\"><br></br>\n          Note:\n          <input type=\"text\" class=\"form-control\" onChange={this.inputNote} />\n        </label>\n      </form>\n      <AlgoSendButton\n      index={0} //If ASA, must be a numeric index value !== 0\n      recipient={this.state.recipient} //string value\n      amount={this.state.amount} //integer value in micro Algos\n      note={this.state.note} //string value\n      myAddress={this.state.myAddress} //string value\n      wallet={myAlgoWallet} //reference to an instance of Pipeline.init(); that is called once when the app is initialized\n      context={this}\n      returnTo={\"txID\"}// string value of state key to return the transaction id\n      />\n      <h3>{\"Transaction ID: \" + this.state.txID}</h3>\n</div>\n  }\n}\n\nexport default App;\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}
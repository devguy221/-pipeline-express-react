{"version":3,"sources":["pipeline-express.svg","App.js","index.js"],"names":["myAlgoWallet","Pipeline","init","App","props","inputRecipient","event","setState","recipient","target","value","inputAmount","amount","inputNote","note","state","myAddress","txID","align","class","alt","src","logo","width","wallet","context","this","returnTo","type","onChange","index","Component","ReactDOM","render","document","getElementById"],"mappings":"qOAAe,MAA0B,6C,OCKnCA,EAAeC,IAASC,OA2DfC,E,kDAxDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAURC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEC,UAAWF,EAAMG,OAAOC,SAZvB,EAenBC,YAAc,SAACL,GACb,EAAKC,SAAS,CAACK,OAAQN,EAAMG,OAAOC,SAhBnB,EAmBnBG,UAAY,SAACP,GACX,EAAKC,SAAS,CAACO,KAAMR,EAAMG,OAAOC,SAlBlC,EAAKK,MAAQ,CACXC,UAAW,GACXR,UAAW,GACXI,OAAQ,EACRE,KAAM,GACNG,KAAM,IAPS,E,0CAuBnB,WACE,OAAO,sBAAKC,MAAM,SAASC,MAAM,OAA1B,UAAiC,qBAAKC,IAAI,mBAAmBC,IAAKC,EAAMC,MAAM,QAAY,uBAC/F,cAAC,IAAD,CAAYC,OAAQxB,EAAcyB,QAASC,KAAMC,SAAU,cAC3D,6BAAK,eAAiBD,KAAKX,MAAMC,YACjC,iCACE,wBAAOG,MAAO,aAAd,uBAEE,uBAAOS,KAAK,OAAOT,MAAM,eAAeU,SAAUH,KAAKrB,oBACjD,uBACR,wBAAOc,MAAM,aAAb,oBAEE,uBAAOS,KAAK,SAAST,MAAM,eAAeU,SAAUH,KAAKf,iBAE3D,wBAAOQ,MAAM,aAAb,UAA0B,uBAA1B,QAEE,uBAAOS,KAAK,OAAOT,MAAM,eAAeU,SAAUH,KAAKb,kBAG3D,cAAC,IAAD,CACAiB,MAAO,EACPtB,UAAWkB,KAAKX,MAAMP,UACtBI,OAAQc,KAAKX,MAAMH,OACnBE,KAAMY,KAAKX,MAAMD,KACjBE,UAAWU,KAAKX,MAAMC,UACtBQ,OAAQxB,EACRyB,QAASC,KACTC,SAAU,SAEV,6BAAK,mBAAqBD,KAAKX,MAAME,c,GArDzBc,aCAlBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.8e798230.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pipeline-express.59b32ae3.svg\";","import React, {Component} from 'react'\r\nimport { AlgoButton, AlgoSendButton, Pipeline} from 'pipeline-express-react'\r\nimport './index.css'\r\nimport logo from './pipeline-express.svg'\r\n\r\nconst myAlgoWallet = Pipeline.init();\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      myAddress: \"\",\r\n      recipient: \"\",\r\n      amount: 0,\r\n      note: \"\",\r\n      txID: \"\"\r\n    }\r\n  }\r\n\r\n  inputRecipient = (event) => {\r\n    this.setState({ recipient: event.target.value });\r\n  }\r\n\r\n  inputAmount = (event) => {\r\n    this.setState({amount: event.target.value});\r\n  }\r\n\r\n  inputNote = (event) => {\r\n    this.setState({note: event.target.value});\r\n  }\r\n  \r\n  render() {\r\n    return <div align=\"center\" class=\"card\"><img alt=\"Pipeline Express\" src={logo} width=\"300\"></img><br></br>\r\n      <AlgoButton wallet={myAlgoWallet} context={this} returnTo={\"myAddress\"} />\r\n      <h3>{\"My Address: \" + this.state.myAddress}</h3>\r\n      <form >\r\n        <label class= \"form-label\">\r\n          Recipient:\r\n          <input type=\"text\" class=\"form-control\" onChange={this.inputRecipient} />\r\n        </label><br></br>\r\n        <label class=\"form-label\">\r\n          Amount:\r\n          <input type=\"number\" class=\"form-control\" onChange={this.inputAmount} />\r\n        </label>\r\n        <label class=\"form-label\"><br></br>\r\n          Note:\r\n          <input type=\"text\" class=\"form-control\" onChange={this.inputNote} />\r\n        </label>\r\n      </form>\r\n      <AlgoSendButton\r\n      index={0} //If ASA, must be a numeric index value !== 0\r\n      recipient={this.state.recipient} //string value\r\n      amount={this.state.amount} //integer value in micro Algos\r\n      note={this.state.note} //string value\r\n      myAddress={this.state.myAddress} //string value\r\n      wallet={myAlgoWallet} //reference to an instance of Pipeline.init(); that is called once when the app is initialized\r\n      context={this}\r\n      returnTo={\"txID\"}// string value of state key to return the transaction id\r\n      />\r\n      <h3>{\"Transaction ID: \" + this.state.txID}</h3>\r\n</div>\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import './index.css'\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}